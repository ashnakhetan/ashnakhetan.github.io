{"version":3,"sources":["webpack:///./src/components/IconCircle/IconCircle.js","webpack:///./src/components/Availability/Availability.js","webpack:///./src/hooks/useWindowSize.js","webpack:///./src/components/RotateImg/RotateImg.js","webpack:///./src/assets/image/png/dev-bg.png","webpack:///./src/assets/image/png/subscribe-pattern.png","webpack:///./src/sections/landing4/Hero.js","webpack:///./src/sections/landing4/Works.js","webpack:///./src/sections/landing4/CTA.js","webpack:///./src/pages/devloper-2.js"],"names":["IconCircle","bg","color","children","rest","px","py","borderRadius","AvailableCircle","styled","Box","Hero","className","mr","variant","useWindowSize","isClient","window","getSize","useCallback","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","BoxStyled","RotateImg","link","imgSrc","imgWidth","setIsHovering","onMouseOver","onMouseOut","to","src","alt","module","exports","SectionStyled","Section","bgHero","hero","pt","pb","Container","mb","spy","smooth","offset","duration","WorkCard","WorkText","Grid","props","breakpoints","lg","options","transitionDuration","Row","Works","items","setItems","devWorks2","map","item","index","Col","md","key","thumbnail","categories","brand","bgFooter","gContext","useContext","GlobalContext","xl","Availability","onClick","e","preventDefault","toggleContact","IndexPage","PageWrapper","darkTheme","name","CTA"],"mappings":"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","file":"component---src-pages-devloper-2-js-24d60d66ed32e913431f.js","sourcesContent":["import React from \"react\";\r\nimport { Box } from \"../Core\";\r\n\r\nconst IconCircle = ({ bg = \"success\", color = \"#fff\", children, ...rest }) => (\r\n  <Box\r\n    bg={bg}\r\n    color={color}\r\n    px=\"1.875rem\"\r\n    py=\"1.25rem\"\r\n    borderRadius=\"50rem\"\r\n    css={`\r\n      text-align: center;\r\n      .icon {\r\n        font-weight: bolder;\r\n        font-size: 2rem !important;\r\n        letter-spacing: -1.2px;\r\n        line-height: 1.375 !important;\r\n      }\r\n    `}\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </Box>\r\n);\r\n\r\nexport default IconCircle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Box, Text } from \"../../components/Core\";\r\n\r\nconst AvailableCircle = styled(Box)`\r\n  border-radius: 50%;\r\n  width: 12px;\r\n  height: 12px;\r\n`;\r\n\r\nconst Hero = ({ className = \"justify-content-center\", ...rest }) => {\r\n  return (\r\n    <>\r\n      <Box className={`d-flex align-items-center ${className}`} {...rest}>\r\n        <AvailableCircle className=\"bg-success\" mr=\"13px\" />\r\n        <Text variant=\"tag\" className=\"text-uppercase\" color=\"heading\">\r\n          AVAILABLE FOR FREELANCE PROJECTS\r\n        </Text>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\n// Hook\r\nexport const useWindowSize = () => {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  const getSize = useCallback(() => {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined\r\n    };\r\n  }, [isClient]);\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize());\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    const handleResize = () => {\r\n      setWindowSize(getSize);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [getSize, isClient]);\r\n\r\n  return windowSize;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport { Box } from \"../../components/Core\";\r\n\r\nimport {useState} from 'react';\r\n\r\nconst BoxStyled = styled(Box)`\r\n  transition: 0.4s;\r\n  &:hover {\r\n    transform: scale(0.8) rotate(-16deg);\r\n    border-radius: 20px;\r\n    box-shadow: 0 32px 74px rgba(68, 77, 136, 0.2);\r\n    overflow: hidden;\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nconst RotateImg = ({ link = \"/\", imgSrc, imgWidth=\"100px\", ...rest }) => {\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  const handleMouseOver = () => {\r\n    setIsHovering(true);\r\n  };\r\n\r\n  const handleMouseOut = () => {\r\n    setIsHovering(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n        <BoxStyled {...rest}>\r\n         <Link to={link} className=\"d-block\">\r\n           <img src={imgSrc} width={imgWidth} alt=\"\" className=\"w-100\"/>\r\n           {/* {isHovering && <h2>Description Here</h2>} */}\r\n         </Link>\r\n       </BoxStyled>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RotateImg;\r\n;\r\n\r\n\r\n\r\n\r\n// const RotateImg = ({ link = \"/\", imgSrc, imgWidth=\"100px\", ...rest }) => {\r\n//   return (\r\n//     <>\r\n//       <BoxStyled {...rest}>\r\n//         <Link to={link} className=\"d-block\">\r\n//           <img src={imgSrc} width={imgWidth} alt=\"\" className=\"w-100\"/>\r\n//         </Link>\r\n//       </BoxStyled>\r\n//     </>\r\n//   );\r\n// };\r\n// export default RotateImg;\r\n","module.exports = __webpack_public_path__ + \"static/dev-bg-b28a1ab8c3829a82507333d10253b42d.png\";","module.exports = __webpack_public_path__ + \"static/subscribe-pattern-e463f88e3b2788bd4d4e8286db1a5283.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nimport { Title, Section, Box, Text, Button } from \"../../components/Core\";\r\nimport IconCircle from \"../../components/IconCircle\";\r\n\r\nimport bgHero from \"../../assets/image/png/dev-bg.png\";\r\n\r\nconst SectionStyled = styled(Section)`\r\n  &::before {\r\n    opacity: 0.085;\r\n    position: absolute;\r\n    top: 0;\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    background: url(${bgHero}) top center no-repeat;\r\n    background-size: cover;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <>\r\n      {/* <!-- Hero Area --> */}\r\n      <SectionStyled\r\n        hero\r\n        className=\"position-relative\"\r\n        pt={[\"50px\", null, \"75px\", \"100px\"]}\r\n        pb={[\"100px\", null, \"150px\", \"200px\"]}\r\n      >\r\n        <Container>\r\n          <Box className=\"d-flex flex-column align-items-center text-center\">\r\n            <IconCircle mb=\"2.5rem\">\r\n              <i className=\"icon icon-code-2\"></i>\r\n            </IconCircle>\r\n\r\n            <Title variant=\"hero\" mb=\"1.5rem\">\r\n              Code. Eat. Sleep.\r\n            </Title>\r\n            <Text\r\n              color=\"text\"\r\n              css={`\r\n                line-height: 1.5;\r\n              `}\r\n              mb=\"2.5rem\"\r\n            >\r\n              I create meaningful solutions for your brands and products.\r\n              <br />\r\n              Give your customers the best experience possible.\r\n            </Text>\r\n            <Link\r\n              to=\"works\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={-50}\r\n              duration={1000}\r\n            >\r\n              <Button>Check latest works</Button>\r\n            </Link>\r\n          </Box>\r\n        </Container>\r\n      </SectionStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Masonry from \"react-masonry-component\";\r\n\r\nimport {\r\n  Title,\r\n  Section,\r\n  Box,\r\n  Text,\r\n  ButtonOutline,\r\n} from \"../../components/Core\";\r\nimport RotateImg from \"../../components/RotateImg\";\r\nimport { devWorks2 } from \"../../data\";\r\nimport { useWindowSize } from \"../../hooks\";\r\nimport { breakpoints } from \"../../utils\";\r\n\r\nconst WorkCard = styled(Box)``;\r\nconst WorkText = styled(Box)``;\r\n\r\nconst Grid = (props) => {\r\n  const size = useWindowSize();\r\n\r\n  const masonryOptions = {\r\n    transitionDuration: 1000,\r\n  };\r\n\r\n  return size.width < breakpoints.lg ? (\r\n    <Masonry\r\n      options={masonryOptions}\r\n      className={\"masonry-grid row\"}\r\n      {...props}\r\n    />\r\n  ) : (\r\n    <Row {...props} />\r\n  );\r\n};\r\n\r\nconst Works = () => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setItems(devWorks2);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* <!-- Works Area --> */}\r\n      <Section className=\"position-relative pt-0\">\r\n        <Container>\r\n          <Grid>\r\n            {items.map((item, index) => (\r\n              <Col md=\"6\" key={index} className=\"filtr-item\">\r\n                <WorkCard className=\"position-relative\" mb=\"30px\">\r\n                  <RotateImg\r\n                    link={item.link}\r\n                    imgSrc={item.thumbnail}\r\n                  />\r\n                  <Box pt=\"2.125rem\">\r\n                    <WorkText className=\"overflow-hidden text-center\">\r\n                      <Text variant=\"tag\" mb=\"0.5rem\">\r\n                        {item.categories[0]}\r\n                      </Text>\r\n                      <Title variant=\"cardLg\">\r\n                        <Link to={item.link}>{item.brand} </Link>\r\n                      </Title>\r\n                    </WorkText>\r\n                  </Box>\r\n                </WorkCard>\r\n              </Col>\r\n            ))}\r\n          </Grid>\r\n          <Box pt=\"3rem\" className=\"text-center\">\r\n            <ButtonOutline>Load more works</ButtonOutline>\r\n          </Box>\r\n        </Container>\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Works;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport GlobalContext from \"../../context/GlobalContext\";\r\nimport { Section, Title, ButtonIcon } from \"../../components/Core\";\r\nimport Availability from \"../../components/Availability\";\r\nimport bgFooter from \"../../assets/image/png/subscribe-pattern.png\";\r\n\r\nconst SectionStyled = styled(Section)`\r\n  &::before {\r\n    position: absolute;\r\n    bottom: -150px;\r\n    content: \"\";\r\n    width: 120%;\r\n    height: 150%;\r\n    background: url(${bgFooter}) bottom center no-repeat;\r\n    background-size: cover;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nconst Hero = () => {\r\n  const gContext = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <SectionStyled className=\"position-relative\">\r\n        <Container>\r\n          <Row className=\"text-center justify-content-center\">\r\n            <Col lg=\"11\" xl=\"8\">\r\n              <Availability />\r\n              <div className=\"text-center my-5\">\r\n                <Title>Give your product a shape</Title>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <ButtonIcon\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    gContext.toggleContact();\r\n                  }}\r\n                >\r\n                  Let's Talk Now\r\n                </ButtonIcon>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </SectionStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import React from \"react\";\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport PageWrapper from \"../components/PageWrapper\";\r\nimport Hero from \"../sections/landing4/Hero\";\r\nimport Works from \"../sections/landing4/Works\";\r\nimport CTA from \"../sections/landing4/CTA\";\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <>\r\n      <PageWrapper darkTheme>\r\n        <Hero />\r\n        <Element name=\"works\">\r\n          <Works />\r\n        </Element>\r\n        <CTA />\r\n      </PageWrapper>\r\n    </>\r\n  );\r\n};\r\nexport default IndexPage;\r\n"],"sourceRoot":""}